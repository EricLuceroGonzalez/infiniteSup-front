{"version":3,"sources":["shared/components/UIElements/MiniSpinner.js","shared/components/UIElements/DateAndTime.js","user/Dashboard.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","shared/utils/validators.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","shared/components/UIElements/ErrorModal.js","shared/hooks/form-hook.js","shared/components/UIElements/Input.js"],"names":["MiniSpinner","className","DateAndTime","useState","time","setTime","useEffect","moment","locale","setInterval","format","style","color","fontFamily","textAlign","fontSize","Dashboard","useHttpClient","isLoading","error","sendRequest","clearError","isMounted","categories","setCategories","setShowModal","a","process","responseData","console","log","fetchCategories","Fragment","marginTop","ErrorModal","onClear","LoadingSpinner","asOverlay","Button","length","map","item","j","key","categoryName","products","k","onClick","icon","faEdit","name","src","image","alt","description","features","creationDate","domesticUse","industryUse","hasFragance","flavors","sizes","renderProducts","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread2","target","i","arguments","source","forEach","getOwnPropertyDescriptors","defineProperties","defineProperty","_defineProperty","obj","value","configurable","writable","VALIDATOR_REQUIRE","type","VALIDATOR_MINLENGTH","val","VALIDATOR_MAXLENGTH","VALIDATOR_EMAIL","validate","validators","isValid","o","Symbol","iterator","Array","isArray","unsupportedIterableToArray","F","s","n","done","e","_e","f","TypeError","it","err","normalCompletion","didErr","step","next","_e2","validator","trim","test","props","onCancel","header","show","footer","faBackward","formReducer","state","action","formIsValid","inputId","inputs","useForm","initialInputs","initialFormValidity","useReducer","formState","dispatch","useCallback","id","inputData","formValidity","inputReducer","isTouched","Input","initialValue","initialValid","inputState","onInput","element","changeHandler","event","touchHandler","placeholder","onBlur","onChange","rows","htmlFor","label","errorText"],"mappings":"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","file":"static/js/4.ace3db55.chunk.js","sourcesContent":["import React from \"react\";\n\nimport \"./MiniSpinner.css\";\n\nconst MiniSpinner = () => {\n  return (\n    // <div className={`${props.asOverlay && \"loading-spinner__overlay\"}`}>\n    <span className=\"mini-lds-dual-ring  mr-auto ml-auto\"></span>\n    // <p></p>\n    // </div>\n  );\n};\n\nexport default MiniSpinner;\n","import React, { useEffect, useState } from \"react\";\nimport moment from \"moment\";\nimport \"moment/locale/es\";\n\nimport MiniSpinner from \"../UIElements/MiniSpinner\";\n\nconst DateAndTime = () => {\n  const [time, setTime] = useState();\n\n  // Refresh time every 1000 ms\n  useEffect(() => {\n    moment.locale(\"es\");\n    setInterval(() => {\n      setTime(moment().format(\"dddd, MMMM DD YYYY, h:mm:ss a\"));\n    }, 1000);\n  }, []);\n\n  return (\n    <p\n      style={{\n        color: \"rgb(59, 89, 152)\",\n        fontFamily: \"monospace\",\n        textAlign: \"left\",\n        fontSize: \"0.75em\",\n      }}\n    >\n      {time ? time : <MiniSpinner />}\n    </p>\n  );\n};\n\nexport default DateAndTime;\n","import React, { useState, useEffect } from \"react\";\nimport { useHttpClient } from \"../shared/hooks/http-hook\";\nimport moment from \"moment\";\nimport \"moment/locale/es\";\n\nimport DateAndTime from \"../shared/components/UIElements/DateAndTime\";\nimport \"./Dashboard.css\";\nimport Button from \"../shared/components/UIElements/Button\";\nimport ErrorModal from \"../shared/components/UIElements/ErrorModal\";\nimport LoadingSpinner from \"../shared/components/UIElements/LoadingSpinner\";\nimport EditProduct from \"./EditProduct\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faEdit } from \"@fortawesome/free-solid-svg-icons\";\nconst Dashboard = () => {\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n  const [isMounted] = useState(true);\n  const [categories, setCategories] = useState([]);\n  const [showModal, setShowModal] = useState(false);\n\n  const errorHandler = () => {\n    setShowModal(false);\n  };\n\n  const openCloseModal = () => {\n    setShowModal(!showModal);\n  };\n\n  useEffect(() => {\n    const fetchCategories = async () => {\n      // if (isMounted) {\n      try {\n        const responseData = await sendRequest(\n          `${process.env.REACT_APP_BACKEND_URL}/products/getCategories`\n        );\n        setCategories(responseData.categories);\n        console.log(responseData.categories);\n        // setIsMounted(false)\n      } catch (err) {}\n      // }\n    };\n\n    if (isMounted) {\n      //  console.log(`isMounted: ${isMounted}`);\n\n      fetchCategories();\n    }\n  }, [sendRequest, isMounted]);\n\n  const renderProducts = () => {\n    if (categories.length > 0) {\n      const allCats = categories.map((item, j) => {\n        return (\n          <div key={j} className=\"col-12 mr-auto ml-auto\">\n            <h4>{item.categoryName}</h4>\n            {item.products.map((item, k) => {\n              return (\n                <div key={k} className=\"col-12 col-lg-8 product-box row d-flex\">\n                  {/**\n                    <EditProduct\n                    show={showModal}\n                    closeModal={() => openCloseModal()}\n                    onClear={errorHandler}\n                    prodName={item.name}\n                  />\n                   */}\n                  <div\n                    className=\"edit-button col-2\"\n                    onClick={() => {\n                      setShowModal(true);\n                    }}\n                  >\n                    <FontAwesomeIcon icon={faEdit} /> Editar\n                  </div>\n                  <h5 className=\"col-12\">{item.name}</h5>\n                  <div className=\"col-12 col-md-4\">\n                    <img\n                      className=\"imgDashboard\"\n                      src={item.image}\n                      alt=\"product illustration\"\n                    ></img>\n                  </div>\n                  <div className=\"col-12 col-md-8\">\n                    <div className=\"col-12 align-list\">\n                      <span className=\"insideSection\">Descripción</span>\n                      <ol>\n                        {item.description.map((item, j) => {\n                          return <li key={j}>{item}</li>;\n                        })}\n                      </ol>\n                    </div>\n\n                    <div className=\"col-12 align-list\">\n                      <span className=\"insideSection\">Ventajas</span>\n                      <ol>\n                        {item.features.map((item, j) => {\n                          return <li key={j}>{item}</li>;\n                        })}\n                      </ol>\n                    </div>\n                    <div className=\"row d-flex\">\n                      <div className=\"col-6 col-md-6\">Creado:</div>\n                      <div className=\"col-6 col-md-6\">\n                        {moment(item.creationDate).format(\"dddd, MMMM DD YYYY\")}\n                      </div>\n                      <div className=\"col-6 col-md-6\">Uso domestico</div>\n                      <div className=\"col-6 col-md-6\">\n                        {item.domesticUse ? \"Si\" : \"No\"}\n                      </div>\n                      <div className=\"col-6 col-md-6\">Uso industrial</div>\n                      <div className=\"col-6 col-md-6\">\n                        {item.industryUse ? \"Si\" : \"No\"}\n                      </div>\n                      <div className=\"col-6 col-md-6\">Fragancia</div>\n                      <div className=\"col-6 col-md-6\">\n                        {item.hasFragance ? \"Si\" : \"No\"}\n                      </div>\n                      <div className=\"col-6 col-md-6\">Aromas</div>\n                      <div className=\"col-6 col-md-6\">\n                        {item.hasFragance &&\n                          item.flavors.map((item, k) => {\n                            return <span key={k}>{item} </span>;\n                          })}\n                      </div>\n                    </div>\n                    <div className=\"row d-flex\">\n                      <div className=\"col-12 col-md-6\">Tamaños</div>\n                      <div className=\"col-12 col-md-6 row d-flex\">\n                        {item.sizes.map((item, k) => {\n                          return (\n                            <div key={k} className=\"col-3\">\n                              {item}{\" \"}\n                            </div>\n                          );\n                        })}\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              );\n            })}\n          </div>\n        );\n      });\n      return allCats;\n    }\n  };\n\n  return (\n    <React.Fragment>\n      <div style={{ marginTop: \"2em\" }}>\n        <ErrorModal error={error} onClear={errorHandler} />\n        {isLoading && <LoadingSpinner asOverlay />}\n        <h2>Dashboard</h2>\n        <h2>Productos</h2>\n        <div className=\"col-12 row d-flex align\">\n          <div className=\"col-12 col-sm-6\">\n            {\" \"}\n            <DateAndTime />\n          </div>\n          <Button className=\"col-12 col-sm-6\">Nuevo Producto</Button>\n        </div>\n        {renderProducts()}\n      </div>\n      <div>\n        <h2>Blog</h2>\n        <div>'renderProducts()'</div>\n      </div>\n    </React.Fragment>\n  );\n};\nexport default Dashboard;\n","import defineProperty from \"./defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","const VALIDATOR_TYPE_REQUIRE = 'REQUIRE';\nconst VALIDATOR_TYPE_MINLENGTH = 'MINLENGTH';\nconst VALIDATOR_TYPE_MAXLENGTH = 'MAXLENGTH';\nconst VALIDATOR_TYPE_MIN = 'MIN';\nconst VALIDATOR_TYPE_MAX = 'MAX';\nconst VALIDATOR_TYPE_EMAIL = 'EMAIL';\nconst VALIDATOR_TYPE_FILE = 'FILE';\n\nexport const VALIDATOR_REQUIRE = () => ({ type: VALIDATOR_TYPE_REQUIRE });\nexport const VALIDATOR_FILE = () => ({ type: VALIDATOR_TYPE_FILE });\nexport const VALIDATOR_MINLENGTH = val => ({\n  type: VALIDATOR_TYPE_MINLENGTH,\n  val: val\n});\nexport const VALIDATOR_MAXLENGTH = val => ({\n  type: VALIDATOR_TYPE_MAXLENGTH,\n  val: val\n});\nexport const VALIDATOR_MIN = val => ({ type: VALIDATOR_TYPE_MIN, val: val });\nexport const VALIDATOR_MAX = val => ({ type: VALIDATOR_TYPE_MAX, val: val });\nexport const VALIDATOR_EMAIL = () => ({ type: VALIDATOR_TYPE_EMAIL });\n\nexport const validate = (value, validators) => {\n  let isValid = true;\n  for (const validator of validators) {\n    if (validator.type === VALIDATOR_TYPE_REQUIRE) {\n      isValid = isValid && value.trim().length > 0;\n    }\n    if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\n      isValid = isValid && value.trim().length >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\n      isValid = isValid && value.trim().length <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MIN) {\n      isValid = isValid && +value >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAX) {\n      isValid = isValid && +value <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_EMAIL) {\n      isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\n    }\n  }\n  return isValid;\n};\n","import unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nexport default function _createForOfIteratorHelper(o) {\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (o = unsupportedIterableToArray(o))) {\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var it,\n      normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = o[Symbol.iterator]();\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","import React from \"react\";\n\nimport Modal from \"./Modal\";\nimport Button from \"../UIElements/Button\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faBackward } from \"@fortawesome/free-solid-svg-icons\";\n\nconst ErrorModal = (props) => {\n  return (\n    <Modal\n      onCancel={props.onClear}\n      header=\"Ha ocurrido un error!\"\n      show={!!props.error}\n      footer={\n        <Button onClick={props.onClear}>\n          <FontAwesomeIcon icon={faBackward} />\n          {\" \"}REGRESAR\n        </Button>\n      }\n    >\n      <p>{props.error}</p>\n    </Modal>\n  );\n};\n\nexport default ErrorModal;\n","import { useCallback, useReducer } from \"react\";\n\n// This hook manage all the FORM logic and Input change logic\n\n// Adding the formReducer that was in NewPlace\n// Receives state and action and return new state\nconst formReducer = (state, action) => {\n  switch (action.type) {\n    case \"INPUT_CHANGE\":\n      let formIsValid = true;\n      for (const inputId in state.inputs) {\n        //   Check if there is undefined input? then continue (for loop)\n        if (!state.inputs[inputId]) {\n          continue;\n        }\n        if (inputId === action.inputId) {\n          formIsValid = formIsValid && action.isValid;\n        } else {\n          formIsValid = formIsValid && state.inputs[inputId].isValid;\n        }\n      }\n      // Return new state according to the input is changing\n      return {\n        ...state,\n        inputs: {\n          ...state.inputs,\n          [action.inputId]: { value: action.value, isValid: action.isValid },\n        },\n        isValid: formIsValid,\n      };\n    case \"SET_DATA\":\n      return {\n        inputs: action.inputs,\n        isValid: action.formIsValid,\n      };\n    default:\n      return state;\n  }\n};\n\nexport const useForm = (initialInputs, initialFormValidity) => {\n  // To manage multiple states (changing) as the title input and others inputs changing\n  // INITIAL STATE\n\n  // Paste it from NewPlace.js\n  const [formState, dispatch] = useReducer(formReducer, {\n    inputs: initialInputs,\n    isValid: initialFormValidity,\n  });\n\n  //   From NewPlace.js\n  // Function\n  const inputHandler = useCallback((id, value, isValid) => {\n    // Use Callback hook to stop the infinite loop create function of functions (reuse)\n    dispatch({\n      type: \"INPUT_CHANGE\",\n      value: value,\n      isValid: isValid,\n      inputId: id,\n    });\n  }, []);\n\n  // initialization of state data and validity\n  const setFormData = useCallback((inputData, formValidity) => {\n    dispatch({\n      type: \"SET_DATA\",\n      inputs: inputData,\n      formIsValid: formValidity,\n    });\n  }, []);\n\n  //   Return some\n  return [formState, inputHandler, setFormData];\n};\n","import React, { useReducer, useEffect } from \"react\";\n\nimport \"./Input.css\";\nimport { validate } from \"../../utils/validators\";\n\n// To feed the reducer:\nconst inputReducer = (state, action) => {\n  switch (action.type) {\n    case \"CHANGE\":\n      return {\n        //   Copy old state:\n        ...state,\n        value: action.val,\n        isValid: validate(action.val, action.validators),\n      };\n    case \"TOUCH\":\n      return {\n        ...state,\n        isTouched: true,\n      };\n    default:\n      return state;\n  }\n};\n\nconst Input = (props) => {\n  // The reducer that receive state and update\n  const [inputState, dispatch] = useReducer(inputReducer, {\n    value: props.initialValue || \"\",\n    isTouched: false,\n    isValid: props.initialValid || false,\n  });\n\n  //   Runs logic when some render changes (if props or inputState changes) this function run\n  const { id, onInput } = props; // Load from props\n  const { value, isValid } = inputState;\n\n  // useEffect runs logic wnd something change\n  useEffect(() => {\n    onInput(id, value, isValid);\n  }, [id, value, isValid, onInput]);\n\n  // change data handler:\n  const changeHandler = (event) => {\n    if (!event) {\n      console.log(\"No Event\");\n    }\n\n    if (!event.target) {\n      //   Store the value and update state:\n      dispatch({\n        type: \"CHANGE\",\n        val: event,\n        validators: this.props.validators,\n      });\n    } else {\n      //   Store the value and update state:\n      dispatch({\n        type: \"CHANGE\",\n        val: event.target.value,\n        validators: props.validators,\n      });\n    }\n  };\n\n  //   Touch handler to throw errors only if touch input:\n  const touchHandler = () => {\n    dispatch({ type: \"TOUCH\" });\n  };\n\n  // Create an form element (input AND textarea):\n  // let element;\n  var element;\n  if (props.element === \"input\") {\n    element = (\n      <input\n        id={props.id}\n        type={props.type}\n        placeholder={props.placeholder}\n        onBlur={touchHandler}\n        onChange={changeHandler}\n        value={inputState.value}\n      />\n    );\n  }\n  if (props.element === \"textarea\") {\n    element = (\n      <textarea\n        id={props.id}\n        rows={props.rows || 3}\n        placeholder={props.placeholder}\n        onBlur={touchHandler}\n        onChange={changeHandler}\n        value={inputState.value}\n      />\n    );\n  }\n  return (\n    <div\n      className={`form-control ${\n        !inputState.isValid && inputState.isTouched && \"form-control--invalid\"\n      }`}\n    >\n      <label htmlFor={props.id}>{props.label}</label>\n      {element}\n      {!inputState.isValid && inputState.isTouched && <p>{props.errorText}</p>}\n    </div>\n  );\n};\n\nexport default Input;\n"],"sourceRoot":""}