{"version":3,"sources":["shared/components/UIElements/Card.js","user/auth.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","shared/utils/validators.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","shared/components/UIElements/ErrorModal.js","shared/hooks/form-hook.js","shared/components/UIElements/Input.js"],"names":["Card","props","className","style","children","Auth","auth","useContext","AuthContext","useState","isLoginMode","setIsLoginMode","useHttpClient","isLoading","error","sendRequest","clearError","history","useHistory","useForm","email","value","isValid","password","formState","inputHandler","setFormData","authSubmitHandler","event","a","console","log","inputs","preventDefault","process","JSON","stringify","responseData","login","userId","token","name","push","Fragment","ErrorModal","onClear","LoadingSpinner","asOverlay","onSubmit","Input","element","id","type","label","validators","VALIDATOR_REQUIRE","errorText","onInput","VALIDATOR_EMAIL","VALIDATOR_MINLENGTH","Button","disabled","inverse","onClick","undefined","prevMode","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","apply","_objectSpread2","target","i","arguments","length","source","forEach","key","getOwnPropertyDescriptors","defineProperties","defineProperty","_defineProperty","obj","configurable","writable","val","VALIDATOR_MAXLENGTH","validate","o","Symbol","iterator","Array","isArray","unsupportedIterableToArray","F","s","n","done","e","_e","f","TypeError","it","err","normalCompletion","didErr","step","next","_e2","validator","trim","test","onCancel","header","show","footer","icon","faBackward","formReducer","state","action","formIsValid","inputId","initialInputs","initialFormValidity","useReducer","dispatch","useCallback","inputData","formValidity","inputReducer","isTouched","initialValue","initialValid","inputState","useEffect","changeHandler","touchHandler","placeholder","onBlur","onChange","rows","htmlFor"],"mappings":"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","file":"static/js/5.1dba8736.chunk.js","sourcesContent":["import React from 'react';\n\nimport './Card.css';\n\nconst Card = props => {\n  return (\n    <div className={`card ${props.className}`} style={props.style}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Card;\n","import React, { useState, useContext } from \"react\";\n\nimport Card from \"../shared/components/UIElements/Card\";\nimport Input from \"../shared/components/UIElements/Input\";\nimport Button from \"../shared/components/UIElements/Button\";\nimport ErrorModal from \"../shared/components/UIElements/ErrorModal\";\nimport LoadingSpinner from \"../shared/components/UIElements/LoadingSpinner\";\nimport { useForm } from \"../shared/hooks/form-hook\";\nimport { useHttpClient } from \"../shared/hooks/http-hook\";\nimport { AuthContext } from \"../shared/context/auth-contex\";\nimport {\n  VALIDATOR_EMAIL,\n  VALIDATOR_MINLENGTH,\n  VALIDATOR_REQUIRE,\n} from \"../shared/utils/validators\";\nimport \"./Auth.css\";\nimport { useHistory } from \"react-router-dom\";\n\nconst Auth = () => {\n  const auth = useContext(AuthContext);\n  // LOGIN or SIGNUP state mode\n  const [isLoginMode, setIsLoginMode] = useState(true);\n  // is Loading is managed by hook\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n  const history=useHistory()\n\n  // Initialize state with form-hook\n  const [formState, inputHandler, setFormData] = useForm(\n    {\n      email: { value: \"\", isValid: false },\n      password: { value: \"\", isValid: false },\n    },\n    false\n  );\n\n  //   To switch this LOGIN-mode component to the SIGNUP-mode component\n  const switchModeHandler = () => {\n    console.log(`isLoginMode: ${isLoginMode}`);\n\n    //   If we are on SIGNUP, add the name field and data to STATE\n    if (!isLoginMode) {\n      setFormData(\n        { ...formState.inputs, name: undefined },\n        formState.inputs.email.isValid && formState.inputs.password.isValid\n      );\n    } else {\n      setFormData(\n        {\n          ...formState.inputs,\n          name: {\n            value: \"\",\n            isValid: false,\n          },\n        },\n        false\n      );\n    }\n    setIsLoginMode((prevMode) => !prevMode);\n  };\n\n  const authSubmitHandler = async (event) => {\n    console.log(formState.inputs);\n\n    event.preventDefault();\n\n    if (isLoginMode) {\n      try {\n        const responseData = await sendRequest(\n          process.env.REACT_APP_BACKEND_URL + \"/users/login\",\n          \"POST\",\n          JSON.stringify({\n            email: formState.inputs.email.value,\n            password: formState.inputs.password.value,\n          }),\n          { \"Content-Type\": \"application/json\" }\n        );\n\n        auth.login(responseData.userId, responseData.token);\n      } catch (err) {\n        console.log(`some Error: ${err}`);\n      }\n    } else {\n      // HTTP Request: fetch()\n      console.log(`${process.env.REACT_APP_BACKEND_URL}/users/signup`);\n\n      try {\n        const responseData = await sendRequest(\n          process.env.REACT_APP_BACKEND_URL + \"/users/signup\",\n          \"POST\",\n          JSON.stringify({\n            name: formState.inputs.name.value,\n            email: formState.inputs.email.value,\n            password: formState.inputs.password.value,\n          }),\n          { \"Content-Type\": \"application/json\" }\n        );\n        // Change the state of Context\n        auth.login(responseData.userId, responseData.token);\n        history.push(\"/dashboard\")\n      } catch (err) {\n        console.log(`Signup error: ${err}`);\n      }\n    }\n  };\n\n  const errorHandler = () => {\n    clearError();\n  };\n  return (\n    <React.Fragment>\n      <ErrorModal error={error} onClear={errorHandler} />\n      <Card className=\"authentication\">\n        {isLoading && <LoadingSpinner asOverlay />}\n        <h2>Iniciar sesión</h2>\n        <hr />\n        <form onSubmit={authSubmitHandler}>\n          {!isLoginMode && (\n            <Input\n              element=\"input\"\n              id=\"name\"\n              type=\"text\"\n              label=\"Nombre\"\n              validators={[VALIDATOR_REQUIRE()]}\n              errorText=\"Please enter a name\"\n              onInput={inputHandler}\n            />\n          )}\n          <Input\n            element=\"input\"\n            id=\"email\"\n            type=\"email\"\n            label=\"E-Mail\"\n            validators={[VALIDATOR_EMAIL()]}\n            errorText=\"Please enter a valid email address\"\n            onInput={inputHandler}\n          ></Input>\n          <Input\n            element=\"input\"\n            id=\"password\"\n            type=\"password\"\n            label=\"Password\"\n            validators={[VALIDATOR_MINLENGTH(6)]}\n            errorText=\"Please enter a valid password. Min Length (6)\"\n            onInput={inputHandler}\n          ></Input>\n          <div className=\"mt-5\">\n            <Button type=\"submit\" disabled={!formState.isValid}>\n              {!isLoginMode ? \"SIGNUP\" : \"LOGIN\"}\n            </Button>\n          </div>\n        </form>\n        <Button inverse onClick={switchModeHandler}>\n          SWITCH TO {isLoginMode ? \"SIGNUP\" : \"LOGIN\"}\n        </Button>\n      </Card>\n    </React.Fragment>\n  );\n};\n\nexport default Auth;\n","import defineProperty from \"./defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","const VALIDATOR_TYPE_REQUIRE = 'REQUIRE';\nconst VALIDATOR_TYPE_MINLENGTH = 'MINLENGTH';\nconst VALIDATOR_TYPE_MAXLENGTH = 'MAXLENGTH';\nconst VALIDATOR_TYPE_MIN = 'MIN';\nconst VALIDATOR_TYPE_MAX = 'MAX';\nconst VALIDATOR_TYPE_EMAIL = 'EMAIL';\nconst VALIDATOR_TYPE_FILE = 'FILE';\n\nexport const VALIDATOR_REQUIRE = () => ({ type: VALIDATOR_TYPE_REQUIRE });\nexport const VALIDATOR_FILE = () => ({ type: VALIDATOR_TYPE_FILE });\nexport const VALIDATOR_MINLENGTH = val => ({\n  type: VALIDATOR_TYPE_MINLENGTH,\n  val: val\n});\nexport const VALIDATOR_MAXLENGTH = val => ({\n  type: VALIDATOR_TYPE_MAXLENGTH,\n  val: val\n});\nexport const VALIDATOR_MIN = val => ({ type: VALIDATOR_TYPE_MIN, val: val });\nexport const VALIDATOR_MAX = val => ({ type: VALIDATOR_TYPE_MAX, val: val });\nexport const VALIDATOR_EMAIL = () => ({ type: VALIDATOR_TYPE_EMAIL });\n\nexport const validate = (value, validators) => {\n  let isValid = true;\n  for (const validator of validators) {\n    if (validator.type === VALIDATOR_TYPE_REQUIRE) {\n      isValid = isValid && value.trim().length > 0;\n    }\n    if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\n      isValid = isValid && value.trim().length >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\n      isValid = isValid && value.trim().length <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MIN) {\n      isValid = isValid && +value >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAX) {\n      isValid = isValid && +value <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_EMAIL) {\n      isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\n    }\n  }\n  return isValid;\n};\n","import unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nexport default function _createForOfIteratorHelper(o) {\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (o = unsupportedIterableToArray(o))) {\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var it,\n      normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = o[Symbol.iterator]();\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","import React from \"react\";\n\nimport Modal from \"./Modal\";\nimport Button from \"../UIElements/Button\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faBackward } from \"@fortawesome/free-solid-svg-icons\";\n\nconst ErrorModal = (props) => {\n  return (\n    <Modal\n      onCancel={props.onClear}\n      header=\"Ha ocurrido un error!\"\n      show={!!props.error}\n      footer={\n        <Button onClick={props.onClear}>\n          <FontAwesomeIcon icon={faBackward} />\n          {\" \"}REGRESAR\n        </Button>\n      }\n    >\n      <p>{props.error}</p>\n    </Modal>\n  );\n};\n\nexport default ErrorModal;\n","import { useCallback, useReducer } from \"react\";\n\n// This hook manage all the FORM logic and Input change logic\n\n// Adding the formReducer that was in NewPlace\n// Receives state and action and return new state\nconst formReducer = (state, action) => {\n  switch (action.type) {\n    case \"INPUT_CHANGE\":\n      let formIsValid = true;\n      for (const inputId in state.inputs) {\n        //   Check if there is undefined input? then continue (for loop)\n        if (!state.inputs[inputId]) {\n          continue;\n        }\n        if (inputId === action.inputId) {\n          formIsValid = formIsValid && action.isValid;\n        } else {\n          formIsValid = formIsValid && state.inputs[inputId].isValid;\n        }\n      }\n      // Return new state according to the input is changing\n      return {\n        ...state,\n        inputs: {\n          ...state.inputs,\n          [action.inputId]: { value: action.value, isValid: action.isValid },\n        },\n        isValid: formIsValid,\n      };\n    case \"SET_DATA\":\n      return {\n        inputs: action.inputs,\n        isValid: action.formIsValid,\n      };\n    default:\n      return state;\n  }\n};\n\nexport const useForm = (initialInputs, initialFormValidity) => {\n  // To manage multiple states (changing) as the title input and others inputs changing\n  // INITIAL STATE\n\n  // Paste it from NewPlace.js\n  const [formState, dispatch] = useReducer(formReducer, {\n    inputs: initialInputs,\n    isValid: initialFormValidity,\n  });\n\n  //   From NewPlace.js\n  // Function\n  const inputHandler = useCallback((id, value, isValid) => {\n    // Use Callback hook to stop the infinite loop create function of functions (reuse)\n    dispatch({\n      type: \"INPUT_CHANGE\",\n      value: value,\n      isValid: isValid,\n      inputId: id,\n    });\n  }, []);\n\n  // initialization of state data and validity\n  const setFormData = useCallback((inputData, formValidity) => {\n    dispatch({\n      type: \"SET_DATA\",\n      inputs: inputData,\n      formIsValid: formValidity,\n    });\n  }, []);\n\n  //   Return some\n  return [formState, inputHandler, setFormData];\n};\n","import React, { useReducer, useEffect } from \"react\";\n\nimport \"./Input.css\";\nimport { validate } from \"../../utils/validators\";\n\n// To feed the reducer:\nconst inputReducer = (state, action) => {\n  switch (action.type) {\n    case \"CHANGE\":\n      return {\n        //   Copy old state:\n        ...state,\n        value: action.val,\n        isValid: validate(action.val, action.validators),\n      };\n    case \"TOUCH\":\n      return {\n        ...state,\n        isTouched: true,\n      };\n    default:\n      return state;\n  }\n};\n\nconst Input = (props) => {\n  // The reducer that receive state and update\n  const [inputState, dispatch] = useReducer(inputReducer, {\n    value: props.initialValue || \"\",\n    isTouched: false,\n    isValid: props.initialValid || false,\n  });\n\n  //   Runs logic when some render changes (if props or inputState changes) this function run\n  const { id, onInput } = props; // Load from props\n  const { value, isValid } = inputState;\n\n  // useEffect runs logic wnd something change\n  useEffect(() => {\n    onInput(id, value, isValid);\n  }, [id, value, isValid, onInput]);\n\n  // change data handler:\n  const changeHandler = (event) => {\n    if (!event) {\n      console.log(\"No Event\");\n    }\n\n    if (!event.target) {\n      //   Store the value and update state:\n      dispatch({\n        type: \"CHANGE\",\n        val: event,\n        validators: this.props.validators,\n      });\n    } else {\n      //   Store the value and update state:\n      dispatch({\n        type: \"CHANGE\",\n        val: event.target.value,\n        validators: props.validators,\n      });\n    }\n  };\n\n  //   Touch handler to throw errors only if touch input:\n  const touchHandler = () => {\n    dispatch({ type: \"TOUCH\" });\n  };\n\n  // Create an form element (input AND textarea):\n  // let element;\n  var element;\n  if (props.element === \"input\") {\n    element = (\n      <input\n        id={props.id}\n        type={props.type}\n        placeholder={props.placeholder}\n        onBlur={touchHandler}\n        onChange={changeHandler}\n        value={inputState.value}\n      />\n    );\n  }\n  if (props.element === \"textarea\") {\n    element = (\n      <textarea\n        id={props.id}\n        rows={props.rows || 3}\n        placeholder={props.placeholder}\n        onBlur={touchHandler}\n        onChange={changeHandler}\n        value={inputState.value}\n      />\n    );\n  }\n  return (\n    <div\n      className={`form-control ${\n        !inputState.isValid && inputState.isTouched && \"form-control--invalid\"\n      }`}\n    >\n      <label htmlFor={props.id}>{props.label}</label>\n      {element}\n      {!inputState.isValid && inputState.isTouched && <p>{props.errorText}</p>}\n    </div>\n  );\n};\n\nexport default Input;\n"],"sourceRoot":""}