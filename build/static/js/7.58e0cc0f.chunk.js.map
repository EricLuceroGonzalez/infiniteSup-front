{"version":3,"sources":["shared/components/UIElements/ErrorModal.js","shared/components/App/Blog.js"],"names":["ErrorModal","props","onCancel","onClear","header","show","error","footer","onClick","icon","faBackward","Blog","useState","size","setSize","useLayoutEffect","updateSize","window","innerWidth","innerHeight","addEventListener","removeEventListener","useWindowSize","width","useHttpClient","isLoading","sendRequest","clearError","blogEntries","setBlogEntries","useEffect","a","process","responseData","blogContent","fecthBlog","className","name","content","asOverlay","map","item","k","key","style","textDecoration","to","_id","title","moment","creationDate","format","resumen","src","image","alt","faChevronRight"],"mappings":"qGAAA,kDAyBeA,IAlBI,SAACC,GAClB,OACE,kBAAC,IAAD,CACEC,SAAUD,EAAME,QAChBC,OAAO,wBACPC,OAAQJ,EAAMK,MACdC,OACE,kBAAC,IAAD,CAAQC,QAASP,EAAME,SACrB,kBAAC,IAAD,CAAiBM,KAAMC,MACtB,IAFH,aAMF,2BAAIT,EAAMK,U,uLCoFDK,UA5EF,WAAO,IAAD,EAdG,WAAO,IAAD,EACFC,mBAAS,CAAC,EAAG,IADX,mBACnBC,EADmB,KACbC,EADa,KAW1B,OATAC,2BAAgB,WACd,SAASC,IACPF,EAAQ,CAACG,OAAOC,WAAYD,OAAOE,cAKrC,OAHAF,OAAOG,iBAAiB,SAAUJ,GAClCA,IAEO,kBAAMC,OAAOI,oBAAoB,SAAUL,MACjD,IACIH,EAISS,GAATC,EADU,sBAEqCC,cAA9CC,EAFS,EAETA,UAAkBC,GAFT,EAEEpB,MAFF,EAESoB,aAFT,KAEsBC,WACDf,mBAAS,KAH9B,mBAGVgB,EAHU,KAGGC,EAHH,KAKjBC,qBAAU,YACO,uCAAG,4BAAAC,EAAA,+EAEaL,EAAY,GAAD,OACjCM,6CADiC,qBAFxB,OAERC,EAFQ,OAKdJ,EAAeI,EAAaC,aALd,uGAAH,qDASfC,KACC,CAACT,IA4CJ,OACE,yBAAKU,UAAU,QACf,kBAAC,IAAD,KACA,2DACA,0BACEC,KAAK,cACLC,QAAQ,yJAGPb,GAAa,kBAAC,IAAD,CAAgBc,WAAS,IACvC,wBAAIH,UAAU,aAAd,QACA,6BApDKR,EAAYY,KAAI,SAACC,EAAMC,GAC5B,OACE,kBAAC,IAAD,CACEC,IAAKD,EACLE,MAAO,CAAEC,eAAgB,QACzBC,GAAE,gBAAWL,EAAKM,MAElB,yBAAKX,UAAU,8DACb,uBAAGA,UAAU,qBAAqBK,EAAKO,OACvC,yBAAKZ,UAAU,mBACb,uBAAGA,UAAU,aACV,IACAa,IAAOR,EAAKS,cAAcC,OAAO,OAEpC,uBAAGf,UAAU,QAAb,IAAsBK,EAAKW,UAE5B7B,EAAQ,MACP,yBAAKa,UAAU,0CACb,yBACEA,UAAU,WACViB,IAAKZ,EAAKa,MACVC,IAAI,eAEN,kBAAC,IAAD,CACEnB,UAAU,qBACV3B,KAAM+C,OAIV,yBAAKpB,UAAU,oBACb,kBAAC,IAAD,CAAiB3B,KAAM+C","file":"static/js/7.58e0cc0f.chunk.js","sourcesContent":["import React from \"react\";\n\nimport Modal from \"./Modal\";\nimport Button from \"../UIElements/Button\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faBackward } from \"@fortawesome/free-solid-svg-icons\";\n\nconst ErrorModal = (props) => {\n  return (\n    <Modal\n      onCancel={props.onClear}\n      header=\"Ha ocurrido un error!\"\n      show={!!props.error}\n      footer={\n        <Button onClick={props.onClear}>\n          <FontAwesomeIcon icon={faBackward} />\n          {\" \"}REGRESAR\n        </Button>\n      }\n    >\n      <p>{props.error}</p>\n    </Modal>\n  );\n};\n\nexport default ErrorModal;\n","import React, { useEffect, useLayoutEffect, useState } from \"react\";\nimport moment from \"moment\";\nimport \"moment/locale/es\";\n\nimport { Link } from \"react-router-dom\";\nimport \"./TextStyle.css\";\nimport \"./Blog.css\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faChevronRight } from \"@fortawesome/free-solid-svg-icons\";\nimport { useHttpClient } from \"../../hooks/http-hook\";\nimport LoadingSpinner from \"../UIElements/LoadingSpinner\";\nimport ErrorModal from \"../UIElements/ErrorModal\";\nimport { Helmet } from \"react-helmet\";\n\nconst useWindowSize = () => {\n  const [size, setSize] = useState([0, 0]);\n  useLayoutEffect(() => {\n    function updateSize() {\n      setSize([window.innerWidth, window.innerHeight]);\n    }\n    window.addEventListener(\"resize\", updateSize);\n    updateSize();\n\n    return () => window.removeEventListener(\"resize\", updateSize);\n  }, []);\n  return size;\n};\n\nconst Blog = () => {\n  const [width] = useWindowSize();\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n  const [blogEntries, setBlogEntries] = useState([]);\n\n  useEffect(() => {\n    const fecthBlog = async () => {\n      try {\n        const responseData = await sendRequest(\n          `${process.env.REACT_APP_BACKEND_URL}/content/getBlog`\n        );\n        setBlogEntries(responseData.blogContent);\n      } catch (err) {}\n    };\n\n    fecthBlog();\n  }, [sendRequest]);\n\n  const getEntry = () => {\n    return blogEntries.map((item, k) => {\n      return (\n        <Link\n          key={k}\n          style={{ textDecoration: \"none\" }}\n          to={`/blog/${item._id}`}\n        >\n          <div className=\"row d-flex col-10 col-md-6 mr-auto ml-auto bordeC entryBox\">\n            <p className=\"entryTitle col-12\">{item.title}</p>\n            <div className=\"col-10 col-sm-4\">\n              <p className=\"entryDate\">\n                {\" \"}\n                {moment(item.creationDate).format(\"LL\")}\n              </p>\n              <p className=\"para\"> {item.resumen}</p>\n            </div>\n            {width > \"500\" ? (\n              <div className=\"col-10 col-sm-8 d-flex align-items-end\">\n                <img\n                  className=\"entryImg\"\n                  src={item.image}\n                  alt=\"blog entry\"\n                ></img>\n                <FontAwesomeIcon\n                  className=\"ml-auto entryArrow\"\n                  icon={faChevronRight}\n                />\n              </div>\n            ) : (\n              <div className=\"col-2 entryArrow\">\n                <FontAwesomeIcon icon={faChevronRight} />\n              </div>\n            )}\n          </div>\n        </Link>\n      );\n    });\n  };\n  const errorHandler = () => {\n    clearError();\n  };\n  return (\n    <div className=\"mt-3\">\n    <Helmet>\n    <title>Infinite Supplies | Blog</title>\n    <meta\n      name=\"description\"\n      content=\"Los mejores productos de limpieza para la industria y el hogar, desinfectantes, detergentes e insumos. Nuestro blog con las mejores recomendaciones\"\n    />\n    </Helmet>\n      {isLoading && <LoadingSpinner asOverlay />}\n      <h1 className=\"itemTitle\">Blog</h1>\n      <div>{getEntry()}</div>\n    </div>\n  );\n};\n\nexport default Blog;\n"],"sourceRoot":""}