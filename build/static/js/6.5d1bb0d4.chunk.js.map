{"version":3,"sources":["media/logo_sm_cut.png","shared/components/App/BlogEntry.js"],"names":["module","exports","BlogEntry","props","useState","blogEntry","setBlogEntry","useHttpClient","isLoading","sendRequest","error","clearError","useEffect","a","process","match","params","id","responseData","blogContent","fecthBlog","className","asOverlay","title","moment","creationDate","format","abstract","width","src","image","alt","textContent","floating","toBack","icon","faArrowCircleLeft","logo_small"],"mappings":"6GAAAA,EAAOC,QAAU,IAA0B,yC,uLCsE5BC,UAzDG,SAACC,GAAW,IAAD,EACOC,mBAAS,IADhB,mBACpBC,EADoB,KACTC,EADS,OAE2BC,cAA9CC,EAFmB,EAEnBA,UAAkBC,GAFC,EAERC,MAFQ,EAEDD,aAFC,EAEYE,WAEvCC,qBAAU,YACO,uCAAG,4BAAAC,EAAA,+EAEaJ,EAAY,GAAD,OACjCK,6CADiC,4BACoBX,EAAMY,MAAMC,OAAOC,KAH/D,OAERC,EAFQ,OAKdZ,EAAaY,EAAaC,aALZ,uGAAH,qDASfC,KACC,CAACX,EAAaN,IA2BjB,OACE,yBAAKkB,UAAU,QACZb,GAAa,kBAAC,IAAD,CAAgBc,WAAS,IACvC,wBAAID,UAAU,aAAd,QACA,6BA3BA,yBAAKA,UAAU,0BACb,yBAAKA,UAAU,0BACb,4BAAKhB,EAAUkB,OACf,uBAAGF,UAAU,aAAb,IAA2BG,IAAOnB,EAAUoB,cAAcC,OAAO,OACjE,6BACE,uBAAGL,UAAU,aAAahB,EAAUsB,YAGxC,yBAAKN,UAAU,6CACb,yBACEO,MAAM,MACNC,IAAKxB,EAAUyB,MACfC,IAAI,yBAEN,uBAAGV,UAAU,QAAQhB,EAAU2B,gBAcnC,kBAAC,IAAD,CAAQC,UAAQ,EAACC,OAAQ,SACvB,kBAAC,IAAD,CAAiBC,KAAMC,OAEzB,yBAAKf,UAAU,oBACb,yBAAKO,MAAM,QAAQC,IAAKQ,IAAYN,IAAI","file":"static/js/6.5d1bb0d4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo_sm_cut.c3c1755e.png\";","import React, { useEffect, useState } from \"react\";\nimport moment from \"moment\";\nimport \"moment/locale/es\";\nimport \"./TextStyle.css\";\nimport { faArrowCircleLeft } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport Button from \"../UIElements/Button\";\n\nimport logo_small from \"../../../media/logo_sm_cut.png\";\nimport { useHttpClient } from \"../../hooks/http-hook\";\nimport LoadingSpinner from \"../UIElements/LoadingSpinner\";\nimport ErrorModal from \"../UIElements/ErrorModal\";\n\nconst BlogEntry = (props) => {\n  const [blogEntry, setBlogEntry] = useState([]);\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n\n  useEffect(() => {\n    const fecthBlog = async () => {\n      try {\n        const responseData = await sendRequest(\n          `${process.env.REACT_APP_BACKEND_URL}/content/getBlog/${props.match.params.id}`\n        );\n        setBlogEntry(responseData.blogContent);\n      } catch (err) {}\n    };\n\n    fecthBlog();\n  }, [sendRequest, props]);\n\n  const getEntry = () => {\n    return (\n      <div className=\"col-12 mr-auto ml-auto\">\n        <div className=\"col-12 mr-auto ml-auto\">\n          <h2>{blogEntry.title}</h2>\n          <p className=\"entryDate\"> {moment(blogEntry.creationDate).format(\"LL\")}</p>\n          <div>\n            <p className=\"itemTitle\">{blogEntry.abstract}</p>\n          </div>\n        </div>\n        <div className=\"mr-auto ml-auto col-12 col-md-10 col-lg-7\">\n          <img\n            width=\"90%\"\n            src={blogEntry.image}\n            alt=\"brand logo as footer\"\n          ></img>\n          <p className=\"para\">{blogEntry.textContent}</p>\n        </div>\n      </div>\n    );\n  };\n  const errorHandler = () => {\n    clearError();\n  };\n  \n  return (\n    <div className=\"mt-3\">\n      {isLoading && <LoadingSpinner asOverlay />}\n      <h1 className=\"itemTitle\">Blog</h1>\n      <div>{getEntry()}</div>\n      <Button floating toBack={\"/blog\"}>\n        <FontAwesomeIcon icon={faArrowCircleLeft} />\n      </Button>\n      <div className=\"col-12 mt-5 mb-4\">\n        <img width=\"100px\" src={logo_small} alt=\"brand logo as footer\"></img>\n      </div>\n    </div>\n  );\n};\n\nexport default BlogEntry;\n"],"sourceRoot":""}